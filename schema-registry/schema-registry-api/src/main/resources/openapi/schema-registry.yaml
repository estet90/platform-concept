openapi: 3.0.2
info:
  title: schema-registry
  version: 1.0.0
servers:
  - url: http://localhost:8080/schema-registry/api/v1

paths:
  /schemas:
    get:
      operationId: getSchema
      summary: 'Обязательно должны быть переданы либо schemaPath + versionName + structureName либо schemaId'
      parameters:
        - $ref: '#/components/parameters/SchemaIdQuery'
        - $ref: '#/components/parameters/SchemaPathQuery'
        - $ref: '#/components/parameters/VersionNameQuery'
        - $ref: '#/components/parameters/StructureNameQuery'
      responses:
        "200":
          $ref: '#/components/responses/GetSchemaByIdResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /structures:
    get:
      operationId: getStructureDescriptor
      parameters:
        - $ref: '#/components/parameters/IdQuery'
        - $ref: '#/components/parameters/NameQuery'
      responses:
        "200":
          $ref: '#/components/responses/GetStructureDescriptorResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /structures/{id}:
    delete:
      operationId: deleteStructure
      parameters:
        - $ref: '#/components/parameters/IdPath'
      responses:
        "202":
          $ref: '#/components/responses/AcceptedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /structures/versions:
    get:
      operationId: getVersion
      summary: 'Обязательно должны быть переданы либо structureId/structureName + versionName либо versionId'
      parameters:
        - $ref: '#/components/parameters/StructureIdQuery'
        - $ref: '#/components/parameters/StructureNameQuery'
        - $ref: '#/components/parameters/VersionIdQuery'
        - $ref: '#/components/parameters/VersionNameQuery'
      responses:
        "200":
          $ref: '#/components/responses/GetVersionResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
    post:
      operationId: createVersion
      parameters:
        - $ref: '#/components/parameters/RequiredStructureNameQuery'
        - $ref: '#/components/parameters/RequiredVersionNameQuery'
      requestBody:
        $ref: '#/components/requestBodies/CreateVersionRequest'
      responses:
        "201":
          $ref: '#/components/responses/CreatedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
  /structures/versions/{id}:
    delete:
      operationId: deleteVersion
      parameters:
        - $ref: '#/components/parameters/IdPath'
      responses:
        "202":
          $ref: '#/components/responses/AcceptedResponse'
        default:
          $ref: '#/components/responses/ErrorResponse'
components:
  parameters:
    IdPath:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int64
    IdQuery:
      name: id
      in: query
      required: false
      schema:
        type: integer
        format: int64
    StructureIdQuery:
      name: structureId
      in: query
      required: false
      schema:
        type: integer
        format: int64
    StructureNameQuery:
      name: structureName
      in: query
      required: false
      schema:
        type: string
    VersionIdQuery:
      name: versionId
      in: query
      required: false
      schema:
        type: integer
        format: int64
    VersionNameQuery:
      name: versionName
      in: query
      required: false
      schema:
        type: string
    RequiredStructureNameQuery:
      name: structureName
      in: query
      required: true
      schema:
        type: string
    RequiredVersionNameQuery:
      name: versionName
      in: query
      required: true
      schema:
        type: string
    NameQuery:
      name: name
      in: query
      required: false
      schema:
        type: string
    SchemaIdQuery:
      name: schemaId
      in: query
      required: false
      schema:
        type: integer
        format: int64
    SchemaPathQuery:
      name: schemaPath
      in: query
      required: false
      schema:
        type: string
  requestBodies:
    CreateVersionRequest:
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
  responses:
    GetSchemaByIdResponse:
      description: Успех
      content:
        text/plain:
          schema:
            type: string
    GetStructureDescriptorResponse:
      description: Успех
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/components/schemas/GetStructureDescriptorResponseData'
    GetVersionResponse:
      description: Успех
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    AcceptedResponse:
      description: Успех
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/components/schemas/AcceptedResponseData'
    CreatedResponse:
      description: Успех
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/components/schemas/CreatedResponseData'
    ErrorResponse:
      description: Ошибка
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/components/schemas/ErrorResponseData'
  schemas:
    GetStructureDescriptorResponseData:
      allOf:
        - $ref: '#/components/schemas/NamedEntity'
        - required:
            - createdAt
            - updatedAt
            - versions
          properties:
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
            versions:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Version'
    Version:
      allOf:
        - $ref: '#/components/schemas/NamedEntity'
        - required:
            - link
            - createdAt
            - schemas
          properties:
            link:
              type: string
            createdAt:
              type: string
              format: date-time
            schemas:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/Schema'
    Schema:
      required:
        - id
        - path
        - link
      properties:
        id:
          type: integer
          format: int64
        path:
          type: string
        link:
          type: string
    NamedEntity:
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    AcceptedResponseData:
      required:
        - count
        - message
      properties:
        count:
          type: integer
        message:
          type: string
    CreatedResponseData:
      required:
        - id
        - message
      properties:
        id:
          type: integer
          format: int64
        message:
          type: string
    ErrorResponseData:
      required:
        - message
      properties:
        message:
          type: string