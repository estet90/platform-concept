"""
This allows you to hydrate new values into fields
"""
directive @hydrated(
    """
    The target service
    """
    service: String!

    """
    The target top level field
    """
    field: String!

    """
    How to identify matching results
    """
    identifiedBy: String! = "id"

    """
    How to identify matching results
    """
    inputIdentifiedBy: [NadelBatchObjectIdentifiedBy!]! = []

    """
    Are results indexed
    """
    indexed: Boolean! = false

    """
    Is querying batched
    """
    batched: Boolean! = false

    """
    The batch size
    """
    batchSize: Int! = 200

    """
    The timeout to use when completing hydration
    """
    timeout: Int! = -1

    """
    The arguments to the hydrated field
    """
    arguments: [NadelHydrationArgument!]!
) on FIELD_DEFINITION

"""
This allows you to rename a type or field in the overall schema
"""
directive @renamed(
    """
    The type to be renamed
    """
    from: String!
) on SCALAR | OBJECT | FIELD_DEFINITION | INTERFACE | UNION | ENUM | INPUT_OBJECT

"""
Indicates that the field is not available for queries or introspection
"""
directive @hidden on FIELD_DEFINITION

"""
This allows you to hydrate new values into fields
"""
directive @hydratedFrom(
    """
    The arguments to the hydrated field
    """
    arguments: [NadelHydrationFromArgument!]! = []

    """
    The hydration template to use
    """
    template: NadelHydrationTemplate!
) on FIELD_DEFINITION

"""
This template directive provides common values to hydrated fields
"""
directive @hydratedTemplate(
    """
    The target service
    """
    service: String!

    """
    The target top level field
    """
    field: String!

    """
    How to identify matching results
    """
    identifiedBy: String! = "id"

    """
    How to identify matching results
    """
    inputIdentifiedBy: [NadelBatchObjectIdentifiedBy!]! = []

    """
    Are results indexed
    """
    indexed: Boolean = false

    """
    Is querying batched
    """
    batched: Boolean = false

    """
    The batch size
    """
    batchSize: Int = 200

    """
    The timeout in milliseconds
    """
    timeout: Int = -1
) on ENUM_VALUE

type Attribute {
    id: Long
    name: String
    value: String
    documentId: Long
}

"""
An RFC-3339 compliant DateTime Scalar
"""
scalar DateTime

type Document {
    id: Long
    name: String
    createdAt: DateTime
    attributes: [Attribute!]
}

"""
A 64-bit signed integer
"""
scalar Long

"""
This is required by batch hydration to understand how to pull out objects from the batched result
"""
input NadelBatchObjectIdentifiedBy {
    sourceId: String!
    resultId: String!
}

"""
This allows you to hydrate new values into fields
"""
input NadelHydrationArgument {
    name: String!
    value: String!
}

"""
This allows you to hydrate new values into fields with the @hydratedFrom directive
"""
input NadelHydrationFromArgument {
    name: String!
    valueFromField: String
    valueFromArg: String
}

enum NadelHydrationTemplate {
    NADEL_PLACEHOLDER
}

type Query {
    attributeFilter(documentId: Long): [Attribute!]
    documentFilter(
        ids: [Long!]
        names: [String!]
        createdAtFrom: DateTime
        createdAtTo: DateTime
    ): [Document!]
}
